Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> body
Rule 1     body -> atribuicoes operacoes
Rule 2     atribuicoes -> atribuicoes atribuicao
Rule 3     atribuicoes -> <empty>
Rule 4     atribuicao -> INT_A ID EQUAL INT ;
Rule 5     atribuicao -> INT_A ID ;
Rule 6     atribuicao -> INT_A ID [ INT ] ;
Rule 7     atribuicao -> INT_A ID [ INT ] [ INT ] ;
Rule 8     atribuicao -> STRING_A ID EQUAL STRING ;
Rule 9     operacoes -> operacoes operacao
Rule 10    operacoes -> operacoes operacao_inc
Rule 11    operacoes -> <empty>
Rule 12    operacao -> ID EQUAL expressoes ;
Rule 13    operacao_inc -> ID + + ;
Rule 14    operacao_inc -> ID - - ;
Rule 15    operacao_inc -> ID + EQUAL expressao ;
Rule 16    operacao_inc -> ID - EQUAL expressao ;
Rule 17    operacao -> ID [ INT ] EQUAL expressoes ;
Rule 18    operacao -> ID [ ID ] EQUAL expressoes ;
Rule 19    operacao_inc -> ID [ INT ] + + ;
Rule 20    operacao_inc -> ID [ ID ] + + ;
Rule 21    operacao_inc -> ID [ INT ] - - ;
Rule 22    operacao_inc -> ID [ ID ] - - ;
Rule 23    operacao_inc -> ID [ INT ] + EQUAL expressao ;
Rule 24    operacao_inc -> ID [ ID ] + EQUAL expressao ;
Rule 25    operacao_inc -> ID [ INT ] - EQUAL expressao ;
Rule 26    operacao_inc -> ID [ ID ] - EQUAL expressao ;
Rule 27    operacao -> ID [ INT ] [ INT ] EQUAL expressoes ;
Rule 28    operacao_inc -> ID [ INT ] [ INT ] + + ;
Rule 29    operacao_inc -> ID [ INT ] [ INT ] - - ;
Rule 30    operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ;
Rule 31    operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ;
Rule 32    operacao -> READ ID ;
Rule 33    operacao -> READ ID [ INT ] ;
Rule 34    operacao -> READ ID [ ID ] ;
Rule 35    operacao -> READ ID [ INT ] [ INT ] ;
Rule 36    expressoes -> expressao
Rule 37    expressoes -> expressao_logica
Rule 38    expressao -> expressao + termo
Rule 39    expressao -> expressao - termo
Rule 40    expressao -> termo
Rule 41    termo -> termo * fator
Rule 42    termo -> termo / fator
Rule 43    termo -> termo % fator
Rule 44    termo -> fator
Rule 45    fator -> INT
Rule 46    fator -> ( expressao )
Rule 47    fator -> ID
Rule 48    fator -> ID [ INT ]
Rule 49    fator -> ID [ ID ]
Rule 50    fator -> ID [ INT ] [ INT ]
Rule 51    expressao_relacional -> expressao > expressao
Rule 52    expressao_relacional -> expressao < expressao
Rule 53    expressao_relacional -> expressao LESS_EQUAL expressao
Rule 54    expressao_relacional -> expressao MORE_EQUAL expressao
Rule 55    expressao_relacional -> expressao EQUAL_EQUAL expressao
Rule 56    expressao_relacional -> expressao DIF expressao
Rule 57    expressao_logica -> ! fator_logico
Rule 58    expressao_logica -> expressao_logica AND fator_logico
Rule 59    expressao_logica -> expressao_logica OR fator_logico
Rule 60    expressao_logica -> fator_logico
Rule 61    fator_logico -> ( expressao_logica )
Rule 62    fator_logico -> expressao_relacional
Rule 63    operacao -> PRINT ID ;
Rule 64    operacao -> PRINT ID [ INT ] ;
Rule 65    operacao -> PRINT ID [ ID ] ;
Rule 66    operacao -> PRINT ID [ INT ] [ INT ] ;
Rule 67    operacao -> PRINT STRING ;
Rule 68    operacao -> IF ( expressao_logica ) { operacoes }
Rule 69    operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes }
Rule 70    operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }

Terminals, with rules where they appear

!                    : 57
%                    : 43
(                    : 46 61 68 69 70
)                    : 46 61 68 69 70
*                    : 41
+                    : 13 13 15 19 19 20 20 23 24 28 28 30 38
-                    : 14 14 16 21 21 22 22 25 26 29 29 31 39
/                    : 42
;                    : 4 5 6 7 8 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 63 64 65 66 67 70 70
<                    : 52
>                    : 51
AND                  : 58
DIF                  : 56
ELSE                 : 69
EQUAL                : 4 8 12 15 16 17 18 23 24 25 26 27 30 31 70
EQUAL_EQUAL          : 55
FOR                  : 70
ID                   : 4 5 6 7 8 12 13 14 15 16 17 18 18 19 20 20 21 22 22 23 24 24 25 26 26 27 28 29 30 31 32 33 34 34 35 47 48 49 49 50 63 64 65 65 66 70
IF                   : 68 69
INT                  : 4 6 7 7 17 19 21 23 25 27 27 28 28 29 29 30 30 31 31 33 35 35 45 48 50 50 64 66 66
INT_A                : 4 5 6 7
LESS_EQUAL           : 53
MORE_EQUAL           : 54
OR                   : 59
PRINT                : 63 64 65 66 67
READ                 : 32 33 34 35
STRING               : 8 67
STRING_A             : 8
[                    : 6 7 7 17 18 19 20 21 22 23 24 25 26 27 27 28 28 29 29 30 30 31 31 33 34 35 35 48 49 50 50 64 65 66 66
]                    : 6 7 7 17 18 19 20 21 22 23 24 25 26 27 27 28 28 29 29 30 30 31 31 33 34 35 35 48 49 50 50 64 65 66 66
error                : 
{                    : 68 69 69 70
}                    : 68 69 69 70

Nonterminals, with rules where they appear

atribuicao           : 2
atribuicoes          : 1 2
body                 : 0
expressao            : 15 16 23 24 25 26 30 31 36 38 39 46 51 51 52 52 53 53 54 54 55 55 56 56 70
expressao_logica     : 37 58 59 61 68 69 70
expressao_relacional : 62
expressoes           : 12 17 18 27
fator                : 41 42 43 44
fator_logico         : 57 58 59 60
operacao             : 9
operacao_inc         : 10 70
operacoes            : 1 9 10 68 69 69 70
termo                : 38 39 40 41 42 43

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . atribuicoes operacoes
    (2) atribuicoes -> . atribuicoes atribuicao
    (3) atribuicoes -> .

    INT_A           reduce using rule 3 (atribuicoes -> .)
    STRING_A        reduce using rule 3 (atribuicoes -> .)
    ID              reduce using rule 3 (atribuicoes -> .)
    READ            reduce using rule 3 (atribuicoes -> .)
    PRINT           reduce using rule 3 (atribuicoes -> .)
    IF              reduce using rule 3 (atribuicoes -> .)
    FOR             reduce using rule 3 (atribuicoes -> .)
    $end            reduce using rule 3 (atribuicoes -> .)

    body                           shift and go to state 1
    atribuicoes                    shift and go to state 2

state 1

    (0) S' -> body .



state 2

    (1) body -> atribuicoes . operacoes
    (2) atribuicoes -> atribuicoes . atribuicao
    (9) operacoes -> . operacoes operacao
    (10) operacoes -> . operacoes operacao_inc
    (11) operacoes -> .
    (4) atribuicao -> . INT_A ID EQUAL INT ;
    (5) atribuicao -> . INT_A ID ;
    (6) atribuicao -> . INT_A ID [ INT ] ;
    (7) atribuicao -> . INT_A ID [ INT ] [ INT ] ;
    (8) atribuicao -> . STRING_A ID EQUAL STRING ;

    ID              reduce using rule 11 (operacoes -> .)
    READ            reduce using rule 11 (operacoes -> .)
    PRINT           reduce using rule 11 (operacoes -> .)
    IF              reduce using rule 11 (operacoes -> .)
    FOR             reduce using rule 11 (operacoes -> .)
    $end            reduce using rule 11 (operacoes -> .)
    INT_A           shift and go to state 5
    STRING_A        shift and go to state 6

    operacoes                      shift and go to state 3
    atribuicao                     shift and go to state 4

state 3

    (1) body -> atribuicoes operacoes .
    (9) operacoes -> operacoes . operacao
    (10) operacoes -> operacoes . operacao_inc
    (12) operacao -> . ID EQUAL expressoes ;
    (17) operacao -> . ID [ INT ] EQUAL expressoes ;
    (18) operacao -> . ID [ ID ] EQUAL expressoes ;
    (27) operacao -> . ID [ INT ] [ INT ] EQUAL expressoes ;
    (32) operacao -> . READ ID ;
    (33) operacao -> . READ ID [ INT ] ;
    (34) operacao -> . READ ID [ ID ] ;
    (35) operacao -> . READ ID [ INT ] [ INT ] ;
    (63) operacao -> . PRINT ID ;
    (64) operacao -> . PRINT ID [ INT ] ;
    (65) operacao -> . PRINT ID [ ID ] ;
    (66) operacao -> . PRINT ID [ INT ] [ INT ] ;
    (67) operacao -> . PRINT STRING ;
    (68) operacao -> . IF ( expressao_logica ) { operacoes }
    (69) operacao -> . IF ( expressao_logica ) { operacoes } ELSE { operacoes }
    (70) operacao -> . FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }
    (13) operacao_inc -> . ID + + ;
    (14) operacao_inc -> . ID - - ;
    (15) operacao_inc -> . ID + EQUAL expressao ;
    (16) operacao_inc -> . ID - EQUAL expressao ;
    (19) operacao_inc -> . ID [ INT ] + + ;
    (20) operacao_inc -> . ID [ ID ] + + ;
    (21) operacao_inc -> . ID [ INT ] - - ;
    (22) operacao_inc -> . ID [ ID ] - - ;
    (23) operacao_inc -> . ID [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> . ID [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> . ID [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> . ID [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> . ID [ INT ] [ INT ] + + ;
    (29) operacao_inc -> . ID [ INT ] [ INT ] - - ;
    (30) operacao_inc -> . ID [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> . ID [ INT ] [ INT ] - EQUAL expressao ;

    $end            reduce using rule 1 (body -> atribuicoes operacoes .)
    ID              shift and go to state 9
    READ            shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    FOR             shift and go to state 13

    operacao                       shift and go to state 7
    operacao_inc                   shift and go to state 8

state 4

    (2) atribuicoes -> atribuicoes atribuicao .

    INT_A           reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    STRING_A        reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    ID              reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    READ            reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    PRINT           reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    IF              reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    FOR             reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)
    $end            reduce using rule 2 (atribuicoes -> atribuicoes atribuicao .)


state 5

    (4) atribuicao -> INT_A . ID EQUAL INT ;
    (5) atribuicao -> INT_A . ID ;
    (6) atribuicao -> INT_A . ID [ INT ] ;
    (7) atribuicao -> INT_A . ID [ INT ] [ INT ] ;

    ID              shift and go to state 14


state 6

    (8) atribuicao -> STRING_A . ID EQUAL STRING ;

    ID              shift and go to state 15


state 7

    (9) operacoes -> operacoes operacao .

    ID              reduce using rule 9 (operacoes -> operacoes operacao .)
    READ            reduce using rule 9 (operacoes -> operacoes operacao .)
    PRINT           reduce using rule 9 (operacoes -> operacoes operacao .)
    IF              reduce using rule 9 (operacoes -> operacoes operacao .)
    FOR             reduce using rule 9 (operacoes -> operacoes operacao .)
    $end            reduce using rule 9 (operacoes -> operacoes operacao .)
    }               reduce using rule 9 (operacoes -> operacoes operacao .)


state 8

    (10) operacoes -> operacoes operacao_inc .

    ID              reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    READ            reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    PRINT           reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    IF              reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    FOR             reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    $end            reduce using rule 10 (operacoes -> operacoes operacao_inc .)
    }               reduce using rule 10 (operacoes -> operacoes operacao_inc .)


state 9

    (12) operacao -> ID . EQUAL expressoes ;
    (17) operacao -> ID . [ INT ] EQUAL expressoes ;
    (18) operacao -> ID . [ ID ] EQUAL expressoes ;
    (27) operacao -> ID . [ INT ] [ INT ] EQUAL expressoes ;
    (13) operacao_inc -> ID . + + ;
    (14) operacao_inc -> ID . - - ;
    (15) operacao_inc -> ID . + EQUAL expressao ;
    (16) operacao_inc -> ID . - EQUAL expressao ;
    (19) operacao_inc -> ID . [ INT ] + + ;
    (20) operacao_inc -> ID . [ ID ] + + ;
    (21) operacao_inc -> ID . [ INT ] - - ;
    (22) operacao_inc -> ID . [ ID ] - - ;
    (23) operacao_inc -> ID . [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> ID . [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> ID . [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> ID . [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> ID . [ INT ] [ INT ] + + ;
    (29) operacao_inc -> ID . [ INT ] [ INT ] - - ;
    (30) operacao_inc -> ID . [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID . [ INT ] [ INT ] - EQUAL expressao ;

    EQUAL           shift and go to state 16
    [               shift and go to state 17
    +               shift and go to state 18
    -               shift and go to state 19


state 10

    (32) operacao -> READ . ID ;
    (33) operacao -> READ . ID [ INT ] ;
    (34) operacao -> READ . ID [ ID ] ;
    (35) operacao -> READ . ID [ INT ] [ INT ] ;

    ID              shift and go to state 20


state 11

    (63) operacao -> PRINT . ID ;
    (64) operacao -> PRINT . ID [ INT ] ;
    (65) operacao -> PRINT . ID [ ID ] ;
    (66) operacao -> PRINT . ID [ INT ] [ INT ] ;
    (67) operacao -> PRINT . STRING ;

    ID              shift and go to state 21
    STRING          shift and go to state 22


state 12

    (68) operacao -> IF . ( expressao_logica ) { operacoes }
    (69) operacao -> IF . ( expressao_logica ) { operacoes } ELSE { operacoes }

    (               shift and go to state 23


state 13

    (70) operacao -> FOR . ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }

    (               shift and go to state 24


state 14

    (4) atribuicao -> INT_A ID . EQUAL INT ;
    (5) atribuicao -> INT_A ID . ;
    (6) atribuicao -> INT_A ID . [ INT ] ;
    (7) atribuicao -> INT_A ID . [ INT ] [ INT ] ;

    EQUAL           shift and go to state 25
    ;               shift and go to state 26
    [               shift and go to state 27


state 15

    (8) atribuicao -> STRING_A ID . EQUAL STRING ;

    EQUAL           shift and go to state 28


state 16

    (12) operacao -> ID EQUAL . expressoes ;
    (36) expressoes -> . expressao
    (37) expressoes -> . expressao_logica
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressoes                     shift and go to state 30
    expressao                      shift and go to state 31
    expressao_logica               shift and go to state 32
    termo                          shift and go to state 33
    fator_logico                   shift and go to state 35
    fator                          shift and go to state 36
    expressao_relacional           shift and go to state 38

state 17

    (17) operacao -> ID [ . INT ] EQUAL expressoes ;
    (18) operacao -> ID [ . ID ] EQUAL expressoes ;
    (27) operacao -> ID [ . INT ] [ INT ] EQUAL expressoes ;
    (19) operacao_inc -> ID [ . INT ] + + ;
    (20) operacao_inc -> ID [ . ID ] + + ;
    (21) operacao_inc -> ID [ . INT ] - - ;
    (22) operacao_inc -> ID [ . ID ] - - ;
    (23) operacao_inc -> ID [ . INT ] + EQUAL expressao ;
    (24) operacao_inc -> ID [ . ID ] + EQUAL expressao ;
    (25) operacao_inc -> ID [ . INT ] - EQUAL expressao ;
    (26) operacao_inc -> ID [ . ID ] - EQUAL expressao ;
    (28) operacao_inc -> ID [ . INT ] [ INT ] + + ;
    (29) operacao_inc -> ID [ . INT ] [ INT ] - - ;
    (30) operacao_inc -> ID [ . INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ . INT ] [ INT ] - EQUAL expressao ;

    INT             shift and go to state 41
    ID              shift and go to state 40


state 18

    (13) operacao_inc -> ID + . + ;
    (15) operacao_inc -> ID + . EQUAL expressao ;

    +               shift and go to state 42
    EQUAL           shift and go to state 43


state 19

    (14) operacao_inc -> ID - . - ;
    (16) operacao_inc -> ID - . EQUAL expressao ;

    -               shift and go to state 44
    EQUAL           shift and go to state 45


state 20

    (32) operacao -> READ ID . ;
    (33) operacao -> READ ID . [ INT ] ;
    (34) operacao -> READ ID . [ ID ] ;
    (35) operacao -> READ ID . [ INT ] [ INT ] ;

    ;               shift and go to state 46
    [               shift and go to state 47


state 21

    (63) operacao -> PRINT ID . ;
    (64) operacao -> PRINT ID . [ INT ] ;
    (65) operacao -> PRINT ID . [ ID ] ;
    (66) operacao -> PRINT ID . [ INT ] [ INT ] ;

    ;               shift and go to state 48
    [               shift and go to state 49


state 22

    (67) operacao -> PRINT STRING . ;

    ;               shift and go to state 50


state 23

    (68) operacao -> IF ( . expressao_logica ) { operacoes }
    (69) operacao -> IF ( . expressao_logica ) { operacoes } ELSE { operacoes }
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressao_logica               shift and go to state 51
    fator_logico                   shift and go to state 35
    expressao_relacional           shift and go to state 38
    expressao                      shift and go to state 52
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 24

    (70) operacao -> FOR ( . ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }

    ID              shift and go to state 53


state 25

    (4) atribuicao -> INT_A ID EQUAL . INT ;

    INT             shift and go to state 54


state 26

    (5) atribuicao -> INT_A ID ; .

    INT_A           reduce using rule 5 (atribuicao -> INT_A ID ; .)
    STRING_A        reduce using rule 5 (atribuicao -> INT_A ID ; .)
    ID              reduce using rule 5 (atribuicao -> INT_A ID ; .)
    READ            reduce using rule 5 (atribuicao -> INT_A ID ; .)
    PRINT           reduce using rule 5 (atribuicao -> INT_A ID ; .)
    IF              reduce using rule 5 (atribuicao -> INT_A ID ; .)
    FOR             reduce using rule 5 (atribuicao -> INT_A ID ; .)
    $end            reduce using rule 5 (atribuicao -> INT_A ID ; .)


state 27

    (6) atribuicao -> INT_A ID [ . INT ] ;
    (7) atribuicao -> INT_A ID [ . INT ] [ INT ] ;

    INT             shift and go to state 55


state 28

    (8) atribuicao -> STRING_A ID EQUAL . STRING ;

    STRING          shift and go to state 56


state 29

    (47) fator -> ID .
    (48) fator -> ID . [ INT ]
    (49) fator -> ID . [ ID ]
    (50) fator -> ID . [ INT ] [ INT ]

    *               reduce using rule 47 (fator -> ID .)
    /               reduce using rule 47 (fator -> ID .)
    %               reduce using rule 47 (fator -> ID .)
    +               reduce using rule 47 (fator -> ID .)
    -               reduce using rule 47 (fator -> ID .)
    >               reduce using rule 47 (fator -> ID .)
    <               reduce using rule 47 (fator -> ID .)
    LESS_EQUAL      reduce using rule 47 (fator -> ID .)
    MORE_EQUAL      reduce using rule 47 (fator -> ID .)
    EQUAL_EQUAL     reduce using rule 47 (fator -> ID .)
    DIF             reduce using rule 47 (fator -> ID .)
    ;               reduce using rule 47 (fator -> ID .)
    )               reduce using rule 47 (fator -> ID .)
    AND             reduce using rule 47 (fator -> ID .)
    OR              reduce using rule 47 (fator -> ID .)
    [               shift and go to state 57


state 30

    (12) operacao -> ID EQUAL expressoes . ;

    ;               shift and go to state 58


state 31

    (36) expressoes -> expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo
    (51) expressao_relacional -> expressao . > expressao
    (52) expressao_relacional -> expressao . < expressao
    (53) expressao_relacional -> expressao . LESS_EQUAL expressao
    (54) expressao_relacional -> expressao . MORE_EQUAL expressao
    (55) expressao_relacional -> expressao . EQUAL_EQUAL expressao
    (56) expressao_relacional -> expressao . DIF expressao

    ;               reduce using rule 36 (expressoes -> expressao .)
    +               shift and go to state 59
    -               shift and go to state 60
    >               shift and go to state 61
    <               shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    MORE_EQUAL      shift and go to state 64
    EQUAL_EQUAL     shift and go to state 65
    DIF             shift and go to state 66


state 32

    (37) expressoes -> expressao_logica .
    (58) expressao_logica -> expressao_logica . AND fator_logico
    (59) expressao_logica -> expressao_logica . OR fator_logico

    ;               reduce using rule 37 (expressoes -> expressao_logica .)
    AND             shift and go to state 67
    OR              shift and go to state 68


state 33

    (40) expressao -> termo .
    (41) termo -> termo . * fator
    (42) termo -> termo . / fator
    (43) termo -> termo . % fator

    +               reduce using rule 40 (expressao -> termo .)
    -               reduce using rule 40 (expressao -> termo .)
    >               reduce using rule 40 (expressao -> termo .)
    <               reduce using rule 40 (expressao -> termo .)
    LESS_EQUAL      reduce using rule 40 (expressao -> termo .)
    MORE_EQUAL      reduce using rule 40 (expressao -> termo .)
    EQUAL_EQUAL     reduce using rule 40 (expressao -> termo .)
    DIF             reduce using rule 40 (expressao -> termo .)
    ;               reduce using rule 40 (expressao -> termo .)
    )               reduce using rule 40 (expressao -> termo .)
    AND             reduce using rule 40 (expressao -> termo .)
    OR              reduce using rule 40 (expressao -> termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 34

    (57) expressao_logica -> ! . fator_logico
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    fator_logico                   shift and go to state 72
    expressao_relacional           shift and go to state 38
    expressao                      shift and go to state 52
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 35

    (60) expressao_logica -> fator_logico .

    AND             reduce using rule 60 (expressao_logica -> fator_logico .)
    OR              reduce using rule 60 (expressao_logica -> fator_logico .)
    ;               reduce using rule 60 (expressao_logica -> fator_logico .)
    )               reduce using rule 60 (expressao_logica -> fator_logico .)


state 36

    (44) termo -> fator .

    *               reduce using rule 44 (termo -> fator .)
    /               reduce using rule 44 (termo -> fator .)
    %               reduce using rule 44 (termo -> fator .)
    +               reduce using rule 44 (termo -> fator .)
    -               reduce using rule 44 (termo -> fator .)
    >               reduce using rule 44 (termo -> fator .)
    <               reduce using rule 44 (termo -> fator .)
    LESS_EQUAL      reduce using rule 44 (termo -> fator .)
    MORE_EQUAL      reduce using rule 44 (termo -> fator .)
    EQUAL_EQUAL     reduce using rule 44 (termo -> fator .)
    DIF             reduce using rule 44 (termo -> fator .)
    ;               reduce using rule 44 (termo -> fator .)
    )               reduce using rule 44 (termo -> fator .)
    AND             reduce using rule 44 (termo -> fator .)
    OR              reduce using rule 44 (termo -> fator .)


state 37

    (61) fator_logico -> ( . expressao_logica )
    (46) fator -> ( . expressao )
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressao_logica               shift and go to state 73
    expressao                      shift and go to state 74
    fator_logico                   shift and go to state 35
    termo                          shift and go to state 33
    expressao_relacional           shift and go to state 38
    fator                          shift and go to state 36

state 38

    (62) fator_logico -> expressao_relacional .

    AND             reduce using rule 62 (fator_logico -> expressao_relacional .)
    OR              reduce using rule 62 (fator_logico -> expressao_relacional .)
    ;               reduce using rule 62 (fator_logico -> expressao_relacional .)
    )               reduce using rule 62 (fator_logico -> expressao_relacional .)


state 39

    (45) fator -> INT .

    *               reduce using rule 45 (fator -> INT .)
    /               reduce using rule 45 (fator -> INT .)
    %               reduce using rule 45 (fator -> INT .)
    +               reduce using rule 45 (fator -> INT .)
    -               reduce using rule 45 (fator -> INT .)
    >               reduce using rule 45 (fator -> INT .)
    <               reduce using rule 45 (fator -> INT .)
    LESS_EQUAL      reduce using rule 45 (fator -> INT .)
    MORE_EQUAL      reduce using rule 45 (fator -> INT .)
    EQUAL_EQUAL     reduce using rule 45 (fator -> INT .)
    DIF             reduce using rule 45 (fator -> INT .)
    ;               reduce using rule 45 (fator -> INT .)
    )               reduce using rule 45 (fator -> INT .)
    AND             reduce using rule 45 (fator -> INT .)
    OR              reduce using rule 45 (fator -> INT .)


state 40

    (18) operacao -> ID [ ID . ] EQUAL expressoes ;
    (20) operacao_inc -> ID [ ID . ] + + ;
    (22) operacao_inc -> ID [ ID . ] - - ;
    (24) operacao_inc -> ID [ ID . ] + EQUAL expressao ;
    (26) operacao_inc -> ID [ ID . ] - EQUAL expressao ;

    ]               shift and go to state 75


state 41

    (17) operacao -> ID [ INT . ] EQUAL expressoes ;
    (27) operacao -> ID [ INT . ] [ INT ] EQUAL expressoes ;
    (19) operacao_inc -> ID [ INT . ] + + ;
    (21) operacao_inc -> ID [ INT . ] - - ;
    (23) operacao_inc -> ID [ INT . ] + EQUAL expressao ;
    (25) operacao_inc -> ID [ INT . ] - EQUAL expressao ;
    (28) operacao_inc -> ID [ INT . ] [ INT ] + + ;
    (29) operacao_inc -> ID [ INT . ] [ INT ] - - ;
    (30) operacao_inc -> ID [ INT . ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT . ] [ INT ] - EQUAL expressao ;

    ]               shift and go to state 76


state 42

    (13) operacao_inc -> ID + + . ;

    ;               shift and go to state 77


state 43

    (15) operacao_inc -> ID + EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 78
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 44

    (14) operacao_inc -> ID - - . ;

    ;               shift and go to state 80


state 45

    (16) operacao_inc -> ID - EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 81
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 46

    (32) operacao -> READ ID ; .

    ID              reduce using rule 32 (operacao -> READ ID ; .)
    READ            reduce using rule 32 (operacao -> READ ID ; .)
    PRINT           reduce using rule 32 (operacao -> READ ID ; .)
    IF              reduce using rule 32 (operacao -> READ ID ; .)
    FOR             reduce using rule 32 (operacao -> READ ID ; .)
    $end            reduce using rule 32 (operacao -> READ ID ; .)
    }               reduce using rule 32 (operacao -> READ ID ; .)


state 47

    (33) operacao -> READ ID [ . INT ] ;
    (34) operacao -> READ ID [ . ID ] ;
    (35) operacao -> READ ID [ . INT ] [ INT ] ;

    INT             shift and go to state 83
    ID              shift and go to state 82


state 48

    (63) operacao -> PRINT ID ; .

    ID              reduce using rule 63 (operacao -> PRINT ID ; .)
    READ            reduce using rule 63 (operacao -> PRINT ID ; .)
    PRINT           reduce using rule 63 (operacao -> PRINT ID ; .)
    IF              reduce using rule 63 (operacao -> PRINT ID ; .)
    FOR             reduce using rule 63 (operacao -> PRINT ID ; .)
    $end            reduce using rule 63 (operacao -> PRINT ID ; .)
    }               reduce using rule 63 (operacao -> PRINT ID ; .)


state 49

    (64) operacao -> PRINT ID [ . INT ] ;
    (65) operacao -> PRINT ID [ . ID ] ;
    (66) operacao -> PRINT ID [ . INT ] [ INT ] ;

    INT             shift and go to state 85
    ID              shift and go to state 84


state 50

    (67) operacao -> PRINT STRING ; .

    ID              reduce using rule 67 (operacao -> PRINT STRING ; .)
    READ            reduce using rule 67 (operacao -> PRINT STRING ; .)
    PRINT           reduce using rule 67 (operacao -> PRINT STRING ; .)
    IF              reduce using rule 67 (operacao -> PRINT STRING ; .)
    FOR             reduce using rule 67 (operacao -> PRINT STRING ; .)
    $end            reduce using rule 67 (operacao -> PRINT STRING ; .)
    }               reduce using rule 67 (operacao -> PRINT STRING ; .)


state 51

    (68) operacao -> IF ( expressao_logica . ) { operacoes }
    (69) operacao -> IF ( expressao_logica . ) { operacoes } ELSE { operacoes }
    (58) expressao_logica -> expressao_logica . AND fator_logico
    (59) expressao_logica -> expressao_logica . OR fator_logico

    )               shift and go to state 86
    AND             shift and go to state 67
    OR              shift and go to state 68


state 52

    (51) expressao_relacional -> expressao . > expressao
    (52) expressao_relacional -> expressao . < expressao
    (53) expressao_relacional -> expressao . LESS_EQUAL expressao
    (54) expressao_relacional -> expressao . MORE_EQUAL expressao
    (55) expressao_relacional -> expressao . EQUAL_EQUAL expressao
    (56) expressao_relacional -> expressao . DIF expressao
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    >               shift and go to state 61
    <               shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    MORE_EQUAL      shift and go to state 64
    EQUAL_EQUAL     shift and go to state 65
    DIF             shift and go to state 66
    +               shift and go to state 59
    -               shift and go to state 60


state 53

    (70) operacao -> FOR ( ID . EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }

    EQUAL           shift and go to state 87


state 54

    (4) atribuicao -> INT_A ID EQUAL INT . ;

    ;               shift and go to state 88


state 55

    (6) atribuicao -> INT_A ID [ INT . ] ;
    (7) atribuicao -> INT_A ID [ INT . ] [ INT ] ;

    ]               shift and go to state 89


state 56

    (8) atribuicao -> STRING_A ID EQUAL STRING . ;

    ;               shift and go to state 90


state 57

    (48) fator -> ID [ . INT ]
    (49) fator -> ID [ . ID ]
    (50) fator -> ID [ . INT ] [ INT ]

    INT             shift and go to state 92
    ID              shift and go to state 91


state 58

    (12) operacao -> ID EQUAL expressoes ; .

    ID              reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    READ            reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    PRINT           reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    IF              reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    FOR             reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    $end            reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)
    }               reduce using rule 12 (operacao -> ID EQUAL expressoes ; .)


state 59

    (38) expressao -> expressao + . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    termo                          shift and go to state 93
    fator                          shift and go to state 36

state 60

    (39) expressao -> expressao - . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    termo                          shift and go to state 94
    fator                          shift and go to state 36

state 61

    (51) expressao_relacional -> expressao > . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 95
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 62

    (52) expressao_relacional -> expressao < . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 96
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 63

    (53) expressao_relacional -> expressao LESS_EQUAL . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 97
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 64

    (54) expressao_relacional -> expressao MORE_EQUAL . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 98
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 65

    (55) expressao_relacional -> expressao EQUAL_EQUAL . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 99
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 66

    (56) expressao_relacional -> expressao DIF . expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 100
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 67

    (58) expressao_logica -> expressao_logica AND . fator_logico
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    fator_logico                   shift and go to state 101
    expressao_relacional           shift and go to state 38
    expressao                      shift and go to state 52
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 68

    (59) expressao_logica -> expressao_logica OR . fator_logico
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    fator_logico                   shift and go to state 102
    expressao_relacional           shift and go to state 38
    expressao                      shift and go to state 52
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 69

    (41) termo -> termo * . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    fator                          shift and go to state 103

state 70

    (42) termo -> termo / . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    fator                          shift and go to state 104

state 71

    (43) termo -> termo % . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    fator                          shift and go to state 105

state 72

    (57) expressao_logica -> ! fator_logico .

    AND             reduce using rule 57 (expressao_logica -> ! fator_logico .)
    OR              reduce using rule 57 (expressao_logica -> ! fator_logico .)
    ;               reduce using rule 57 (expressao_logica -> ! fator_logico .)
    )               reduce using rule 57 (expressao_logica -> ! fator_logico .)


state 73

    (61) fator_logico -> ( expressao_logica . )
    (58) expressao_logica -> expressao_logica . AND fator_logico
    (59) expressao_logica -> expressao_logica . OR fator_logico

    )               shift and go to state 106
    AND             shift and go to state 67
    OR              shift and go to state 68


state 74

    (46) fator -> ( expressao . )
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo
    (51) expressao_relacional -> expressao . > expressao
    (52) expressao_relacional -> expressao . < expressao
    (53) expressao_relacional -> expressao . LESS_EQUAL expressao
    (54) expressao_relacional -> expressao . MORE_EQUAL expressao
    (55) expressao_relacional -> expressao . EQUAL_EQUAL expressao
    (56) expressao_relacional -> expressao . DIF expressao

    )               shift and go to state 107
    +               shift and go to state 59
    -               shift and go to state 60
    >               shift and go to state 61
    <               shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    MORE_EQUAL      shift and go to state 64
    EQUAL_EQUAL     shift and go to state 65
    DIF             shift and go to state 66


state 75

    (18) operacao -> ID [ ID ] . EQUAL expressoes ;
    (20) operacao_inc -> ID [ ID ] . + + ;
    (22) operacao_inc -> ID [ ID ] . - - ;
    (24) operacao_inc -> ID [ ID ] . + EQUAL expressao ;
    (26) operacao_inc -> ID [ ID ] . - EQUAL expressao ;

    EQUAL           shift and go to state 108
    +               shift and go to state 109
    -               shift and go to state 110


state 76

    (17) operacao -> ID [ INT ] . EQUAL expressoes ;
    (27) operacao -> ID [ INT ] . [ INT ] EQUAL expressoes ;
    (19) operacao_inc -> ID [ INT ] . + + ;
    (21) operacao_inc -> ID [ INT ] . - - ;
    (23) operacao_inc -> ID [ INT ] . + EQUAL expressao ;
    (25) operacao_inc -> ID [ INT ] . - EQUAL expressao ;
    (28) operacao_inc -> ID [ INT ] . [ INT ] + + ;
    (29) operacao_inc -> ID [ INT ] . [ INT ] - - ;
    (30) operacao_inc -> ID [ INT ] . [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] . [ INT ] - EQUAL expressao ;

    EQUAL           shift and go to state 112
    [               shift and go to state 111
    +               shift and go to state 113
    -               shift and go to state 114


state 77

    (13) operacao_inc -> ID + + ; .

    ID              reduce using rule 13 (operacao_inc -> ID + + ; .)
    READ            reduce using rule 13 (operacao_inc -> ID + + ; .)
    PRINT           reduce using rule 13 (operacao_inc -> ID + + ; .)
    IF              reduce using rule 13 (operacao_inc -> ID + + ; .)
    FOR             reduce using rule 13 (operacao_inc -> ID + + ; .)
    $end            reduce using rule 13 (operacao_inc -> ID + + ; .)
    }               reduce using rule 13 (operacao_inc -> ID + + ; .)
    )               reduce using rule 13 (operacao_inc -> ID + + ; .)


state 78

    (15) operacao_inc -> ID + EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 115
    +               shift and go to state 59
    -               shift and go to state 60


state 79

    (46) fator -> ( . expressao )
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 116
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 80

    (14) operacao_inc -> ID - - ; .

    ID              reduce using rule 14 (operacao_inc -> ID - - ; .)
    READ            reduce using rule 14 (operacao_inc -> ID - - ; .)
    PRINT           reduce using rule 14 (operacao_inc -> ID - - ; .)
    IF              reduce using rule 14 (operacao_inc -> ID - - ; .)
    FOR             reduce using rule 14 (operacao_inc -> ID - - ; .)
    $end            reduce using rule 14 (operacao_inc -> ID - - ; .)
    }               reduce using rule 14 (operacao_inc -> ID - - ; .)
    )               reduce using rule 14 (operacao_inc -> ID - - ; .)


state 81

    (16) operacao_inc -> ID - EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 117
    +               shift and go to state 59
    -               shift and go to state 60


state 82

    (34) operacao -> READ ID [ ID . ] ;

    ]               shift and go to state 118


state 83

    (33) operacao -> READ ID [ INT . ] ;
    (35) operacao -> READ ID [ INT . ] [ INT ] ;

    ]               shift and go to state 119


state 84

    (65) operacao -> PRINT ID [ ID . ] ;

    ]               shift and go to state 120


state 85

    (64) operacao -> PRINT ID [ INT . ] ;
    (66) operacao -> PRINT ID [ INT . ] [ INT ] ;

    ]               shift and go to state 121


state 86

    (68) operacao -> IF ( expressao_logica ) . { operacoes }
    (69) operacao -> IF ( expressao_logica ) . { operacoes } ELSE { operacoes }

    {               shift and go to state 122


state 87

    (70) operacao -> FOR ( ID EQUAL . expressao ; expressao_logica ; operacao_inc ) { operacoes }
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 123
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 88

    (4) atribuicao -> INT_A ID EQUAL INT ; .

    INT_A           reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    STRING_A        reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    ID              reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    READ            reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    PRINT           reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    IF              reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    FOR             reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)
    $end            reduce using rule 4 (atribuicao -> INT_A ID EQUAL INT ; .)


state 89

    (6) atribuicao -> INT_A ID [ INT ] . ;
    (7) atribuicao -> INT_A ID [ INT ] . [ INT ] ;

    ;               shift and go to state 125
    [               shift and go to state 124


state 90

    (8) atribuicao -> STRING_A ID EQUAL STRING ; .

    INT_A           reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    STRING_A        reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    ID              reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    READ            reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    PRINT           reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    IF              reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    FOR             reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)
    $end            reduce using rule 8 (atribuicao -> STRING_A ID EQUAL STRING ; .)


state 91

    (49) fator -> ID [ ID . ]

    ]               shift and go to state 126


state 92

    (48) fator -> ID [ INT . ]
    (50) fator -> ID [ INT . ] [ INT ]

    ]               shift and go to state 127


state 93

    (38) expressao -> expressao + termo .
    (41) termo -> termo . * fator
    (42) termo -> termo . / fator
    (43) termo -> termo . % fator

    +               reduce using rule 38 (expressao -> expressao + termo .)
    -               reduce using rule 38 (expressao -> expressao + termo .)
    >               reduce using rule 38 (expressao -> expressao + termo .)
    <               reduce using rule 38 (expressao -> expressao + termo .)
    LESS_EQUAL      reduce using rule 38 (expressao -> expressao + termo .)
    MORE_EQUAL      reduce using rule 38 (expressao -> expressao + termo .)
    EQUAL_EQUAL     reduce using rule 38 (expressao -> expressao + termo .)
    DIF             reduce using rule 38 (expressao -> expressao + termo .)
    ;               reduce using rule 38 (expressao -> expressao + termo .)
    )               reduce using rule 38 (expressao -> expressao + termo .)
    AND             reduce using rule 38 (expressao -> expressao + termo .)
    OR              reduce using rule 38 (expressao -> expressao + termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 94

    (39) expressao -> expressao - termo .
    (41) termo -> termo . * fator
    (42) termo -> termo . / fator
    (43) termo -> termo . % fator

    +               reduce using rule 39 (expressao -> expressao - termo .)
    -               reduce using rule 39 (expressao -> expressao - termo .)
    >               reduce using rule 39 (expressao -> expressao - termo .)
    <               reduce using rule 39 (expressao -> expressao - termo .)
    LESS_EQUAL      reduce using rule 39 (expressao -> expressao - termo .)
    MORE_EQUAL      reduce using rule 39 (expressao -> expressao - termo .)
    EQUAL_EQUAL     reduce using rule 39 (expressao -> expressao - termo .)
    DIF             reduce using rule 39 (expressao -> expressao - termo .)
    ;               reduce using rule 39 (expressao -> expressao - termo .)
    )               reduce using rule 39 (expressao -> expressao - termo .)
    AND             reduce using rule 39 (expressao -> expressao - termo .)
    OR              reduce using rule 39 (expressao -> expressao - termo .)
    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 71


state 95

    (51) expressao_relacional -> expressao > expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 51 (expressao_relacional -> expressao > expressao .)
    OR              reduce using rule 51 (expressao_relacional -> expressao > expressao .)
    ;               reduce using rule 51 (expressao_relacional -> expressao > expressao .)
    )               reduce using rule 51 (expressao_relacional -> expressao > expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 96

    (52) expressao_relacional -> expressao < expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 52 (expressao_relacional -> expressao < expressao .)
    OR              reduce using rule 52 (expressao_relacional -> expressao < expressao .)
    ;               reduce using rule 52 (expressao_relacional -> expressao < expressao .)
    )               reduce using rule 52 (expressao_relacional -> expressao < expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 97

    (53) expressao_relacional -> expressao LESS_EQUAL expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 53 (expressao_relacional -> expressao LESS_EQUAL expressao .)
    OR              reduce using rule 53 (expressao_relacional -> expressao LESS_EQUAL expressao .)
    ;               reduce using rule 53 (expressao_relacional -> expressao LESS_EQUAL expressao .)
    )               reduce using rule 53 (expressao_relacional -> expressao LESS_EQUAL expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 98

    (54) expressao_relacional -> expressao MORE_EQUAL expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 54 (expressao_relacional -> expressao MORE_EQUAL expressao .)
    OR              reduce using rule 54 (expressao_relacional -> expressao MORE_EQUAL expressao .)
    ;               reduce using rule 54 (expressao_relacional -> expressao MORE_EQUAL expressao .)
    )               reduce using rule 54 (expressao_relacional -> expressao MORE_EQUAL expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 99

    (55) expressao_relacional -> expressao EQUAL_EQUAL expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 55 (expressao_relacional -> expressao EQUAL_EQUAL expressao .)
    OR              reduce using rule 55 (expressao_relacional -> expressao EQUAL_EQUAL expressao .)
    ;               reduce using rule 55 (expressao_relacional -> expressao EQUAL_EQUAL expressao .)
    )               reduce using rule 55 (expressao_relacional -> expressao EQUAL_EQUAL expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 100

    (56) expressao_relacional -> expressao DIF expressao .
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    AND             reduce using rule 56 (expressao_relacional -> expressao DIF expressao .)
    OR              reduce using rule 56 (expressao_relacional -> expressao DIF expressao .)
    ;               reduce using rule 56 (expressao_relacional -> expressao DIF expressao .)
    )               reduce using rule 56 (expressao_relacional -> expressao DIF expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 101

    (58) expressao_logica -> expressao_logica AND fator_logico .

    AND             reduce using rule 58 (expressao_logica -> expressao_logica AND fator_logico .)
    OR              reduce using rule 58 (expressao_logica -> expressao_logica AND fator_logico .)
    ;               reduce using rule 58 (expressao_logica -> expressao_logica AND fator_logico .)
    )               reduce using rule 58 (expressao_logica -> expressao_logica AND fator_logico .)


state 102

    (59) expressao_logica -> expressao_logica OR fator_logico .

    AND             reduce using rule 59 (expressao_logica -> expressao_logica OR fator_logico .)
    OR              reduce using rule 59 (expressao_logica -> expressao_logica OR fator_logico .)
    ;               reduce using rule 59 (expressao_logica -> expressao_logica OR fator_logico .)
    )               reduce using rule 59 (expressao_logica -> expressao_logica OR fator_logico .)


state 103

    (41) termo -> termo * fator .

    *               reduce using rule 41 (termo -> termo * fator .)
    /               reduce using rule 41 (termo -> termo * fator .)
    %               reduce using rule 41 (termo -> termo * fator .)
    +               reduce using rule 41 (termo -> termo * fator .)
    -               reduce using rule 41 (termo -> termo * fator .)
    >               reduce using rule 41 (termo -> termo * fator .)
    <               reduce using rule 41 (termo -> termo * fator .)
    LESS_EQUAL      reduce using rule 41 (termo -> termo * fator .)
    MORE_EQUAL      reduce using rule 41 (termo -> termo * fator .)
    EQUAL_EQUAL     reduce using rule 41 (termo -> termo * fator .)
    DIF             reduce using rule 41 (termo -> termo * fator .)
    ;               reduce using rule 41 (termo -> termo * fator .)
    )               reduce using rule 41 (termo -> termo * fator .)
    AND             reduce using rule 41 (termo -> termo * fator .)
    OR              reduce using rule 41 (termo -> termo * fator .)


state 104

    (42) termo -> termo / fator .

    *               reduce using rule 42 (termo -> termo / fator .)
    /               reduce using rule 42 (termo -> termo / fator .)
    %               reduce using rule 42 (termo -> termo / fator .)
    +               reduce using rule 42 (termo -> termo / fator .)
    -               reduce using rule 42 (termo -> termo / fator .)
    >               reduce using rule 42 (termo -> termo / fator .)
    <               reduce using rule 42 (termo -> termo / fator .)
    LESS_EQUAL      reduce using rule 42 (termo -> termo / fator .)
    MORE_EQUAL      reduce using rule 42 (termo -> termo / fator .)
    EQUAL_EQUAL     reduce using rule 42 (termo -> termo / fator .)
    DIF             reduce using rule 42 (termo -> termo / fator .)
    ;               reduce using rule 42 (termo -> termo / fator .)
    )               reduce using rule 42 (termo -> termo / fator .)
    AND             reduce using rule 42 (termo -> termo / fator .)
    OR              reduce using rule 42 (termo -> termo / fator .)


state 105

    (43) termo -> termo % fator .

    *               reduce using rule 43 (termo -> termo % fator .)
    /               reduce using rule 43 (termo -> termo % fator .)
    %               reduce using rule 43 (termo -> termo % fator .)
    +               reduce using rule 43 (termo -> termo % fator .)
    -               reduce using rule 43 (termo -> termo % fator .)
    >               reduce using rule 43 (termo -> termo % fator .)
    <               reduce using rule 43 (termo -> termo % fator .)
    LESS_EQUAL      reduce using rule 43 (termo -> termo % fator .)
    MORE_EQUAL      reduce using rule 43 (termo -> termo % fator .)
    EQUAL_EQUAL     reduce using rule 43 (termo -> termo % fator .)
    DIF             reduce using rule 43 (termo -> termo % fator .)
    ;               reduce using rule 43 (termo -> termo % fator .)
    )               reduce using rule 43 (termo -> termo % fator .)
    AND             reduce using rule 43 (termo -> termo % fator .)
    OR              reduce using rule 43 (termo -> termo % fator .)


state 106

    (61) fator_logico -> ( expressao_logica ) .

    AND             reduce using rule 61 (fator_logico -> ( expressao_logica ) .)
    OR              reduce using rule 61 (fator_logico -> ( expressao_logica ) .)
    ;               reduce using rule 61 (fator_logico -> ( expressao_logica ) .)
    )               reduce using rule 61 (fator_logico -> ( expressao_logica ) .)


state 107

    (46) fator -> ( expressao ) .

    *               reduce using rule 46 (fator -> ( expressao ) .)
    /               reduce using rule 46 (fator -> ( expressao ) .)
    %               reduce using rule 46 (fator -> ( expressao ) .)
    +               reduce using rule 46 (fator -> ( expressao ) .)
    -               reduce using rule 46 (fator -> ( expressao ) .)
    >               reduce using rule 46 (fator -> ( expressao ) .)
    <               reduce using rule 46 (fator -> ( expressao ) .)
    LESS_EQUAL      reduce using rule 46 (fator -> ( expressao ) .)
    MORE_EQUAL      reduce using rule 46 (fator -> ( expressao ) .)
    EQUAL_EQUAL     reduce using rule 46 (fator -> ( expressao ) .)
    DIF             reduce using rule 46 (fator -> ( expressao ) .)
    ;               reduce using rule 46 (fator -> ( expressao ) .)
    )               reduce using rule 46 (fator -> ( expressao ) .)
    AND             reduce using rule 46 (fator -> ( expressao ) .)
    OR              reduce using rule 46 (fator -> ( expressao ) .)


state 108

    (18) operacao -> ID [ ID ] EQUAL . expressoes ;
    (36) expressoes -> . expressao
    (37) expressoes -> . expressao_logica
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressoes                     shift and go to state 128
    expressao                      shift and go to state 31
    expressao_logica               shift and go to state 32
    termo                          shift and go to state 33
    fator_logico                   shift and go to state 35
    fator                          shift and go to state 36
    expressao_relacional           shift and go to state 38

state 109

    (20) operacao_inc -> ID [ ID ] + . + ;
    (24) operacao_inc -> ID [ ID ] + . EQUAL expressao ;

    +               shift and go to state 129
    EQUAL           shift and go to state 130


state 110

    (22) operacao_inc -> ID [ ID ] - . - ;
    (26) operacao_inc -> ID [ ID ] - . EQUAL expressao ;

    -               shift and go to state 131
    EQUAL           shift and go to state 132


state 111

    (27) operacao -> ID [ INT ] [ . INT ] EQUAL expressoes ;
    (28) operacao_inc -> ID [ INT ] [ . INT ] + + ;
    (29) operacao_inc -> ID [ INT ] [ . INT ] - - ;
    (30) operacao_inc -> ID [ INT ] [ . INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ . INT ] - EQUAL expressao ;

    INT             shift and go to state 133


state 112

    (17) operacao -> ID [ INT ] EQUAL . expressoes ;
    (36) expressoes -> . expressao
    (37) expressoes -> . expressao_logica
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressoes                     shift and go to state 134
    expressao                      shift and go to state 31
    expressao_logica               shift and go to state 32
    termo                          shift and go to state 33
    fator_logico                   shift and go to state 35
    fator                          shift and go to state 36
    expressao_relacional           shift and go to state 38

state 113

    (19) operacao_inc -> ID [ INT ] + . + ;
    (23) operacao_inc -> ID [ INT ] + . EQUAL expressao ;

    +               shift and go to state 135
    EQUAL           shift and go to state 136


state 114

    (21) operacao_inc -> ID [ INT ] - . - ;
    (25) operacao_inc -> ID [ INT ] - . EQUAL expressao ;

    -               shift and go to state 137
    EQUAL           shift and go to state 138


state 115

    (15) operacao_inc -> ID + EQUAL expressao ; .

    ID              reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    READ            reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    PRINT           reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    IF              reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    FOR             reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    $end            reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    }               reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)
    )               reduce using rule 15 (operacao_inc -> ID + EQUAL expressao ; .)


state 116

    (46) fator -> ( expressao . )
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    )               shift and go to state 107
    +               shift and go to state 59
    -               shift and go to state 60


state 117

    (16) operacao_inc -> ID - EQUAL expressao ; .

    ID              reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    READ            reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    PRINT           reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    IF              reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    FOR             reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    $end            reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    }               reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)
    )               reduce using rule 16 (operacao_inc -> ID - EQUAL expressao ; .)


state 118

    (34) operacao -> READ ID [ ID ] . ;

    ;               shift and go to state 139


state 119

    (33) operacao -> READ ID [ INT ] . ;
    (35) operacao -> READ ID [ INT ] . [ INT ] ;

    ;               shift and go to state 141
    [               shift and go to state 140


state 120

    (65) operacao -> PRINT ID [ ID ] . ;

    ;               shift and go to state 142


state 121

    (64) operacao -> PRINT ID [ INT ] . ;
    (66) operacao -> PRINT ID [ INT ] . [ INT ] ;

    ;               shift and go to state 144
    [               shift and go to state 143


state 122

    (68) operacao -> IF ( expressao_logica ) { . operacoes }
    (69) operacao -> IF ( expressao_logica ) { . operacoes } ELSE { operacoes }
    (9) operacoes -> . operacoes operacao
    (10) operacoes -> . operacoes operacao_inc
    (11) operacoes -> .

    }               reduce using rule 11 (operacoes -> .)
    ID              reduce using rule 11 (operacoes -> .)
    READ            reduce using rule 11 (operacoes -> .)
    PRINT           reduce using rule 11 (operacoes -> .)
    IF              reduce using rule 11 (operacoes -> .)
    FOR             reduce using rule 11 (operacoes -> .)

    operacoes                      shift and go to state 145

state 123

    (70) operacao -> FOR ( ID EQUAL expressao . ; expressao_logica ; operacao_inc ) { operacoes }
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 146
    +               shift and go to state 59
    -               shift and go to state 60


state 124

    (7) atribuicao -> INT_A ID [ INT ] [ . INT ] ;

    INT             shift and go to state 147


state 125

    (6) atribuicao -> INT_A ID [ INT ] ; .

    INT_A           reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    STRING_A        reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    ID              reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    READ            reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    PRINT           reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    IF              reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    FOR             reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)
    $end            reduce using rule 6 (atribuicao -> INT_A ID [ INT ] ; .)


state 126

    (49) fator -> ID [ ID ] .

    *               reduce using rule 49 (fator -> ID [ ID ] .)
    /               reduce using rule 49 (fator -> ID [ ID ] .)
    %               reduce using rule 49 (fator -> ID [ ID ] .)
    +               reduce using rule 49 (fator -> ID [ ID ] .)
    -               reduce using rule 49 (fator -> ID [ ID ] .)
    >               reduce using rule 49 (fator -> ID [ ID ] .)
    <               reduce using rule 49 (fator -> ID [ ID ] .)
    LESS_EQUAL      reduce using rule 49 (fator -> ID [ ID ] .)
    MORE_EQUAL      reduce using rule 49 (fator -> ID [ ID ] .)
    EQUAL_EQUAL     reduce using rule 49 (fator -> ID [ ID ] .)
    DIF             reduce using rule 49 (fator -> ID [ ID ] .)
    ;               reduce using rule 49 (fator -> ID [ ID ] .)
    )               reduce using rule 49 (fator -> ID [ ID ] .)
    AND             reduce using rule 49 (fator -> ID [ ID ] .)
    OR              reduce using rule 49 (fator -> ID [ ID ] .)


state 127

    (48) fator -> ID [ INT ] .
    (50) fator -> ID [ INT ] . [ INT ]

    *               reduce using rule 48 (fator -> ID [ INT ] .)
    /               reduce using rule 48 (fator -> ID [ INT ] .)
    %               reduce using rule 48 (fator -> ID [ INT ] .)
    +               reduce using rule 48 (fator -> ID [ INT ] .)
    -               reduce using rule 48 (fator -> ID [ INT ] .)
    >               reduce using rule 48 (fator -> ID [ INT ] .)
    <               reduce using rule 48 (fator -> ID [ INT ] .)
    LESS_EQUAL      reduce using rule 48 (fator -> ID [ INT ] .)
    MORE_EQUAL      reduce using rule 48 (fator -> ID [ INT ] .)
    EQUAL_EQUAL     reduce using rule 48 (fator -> ID [ INT ] .)
    DIF             reduce using rule 48 (fator -> ID [ INT ] .)
    ;               reduce using rule 48 (fator -> ID [ INT ] .)
    )               reduce using rule 48 (fator -> ID [ INT ] .)
    AND             reduce using rule 48 (fator -> ID [ INT ] .)
    OR              reduce using rule 48 (fator -> ID [ INT ] .)
    [               shift and go to state 148


state 128

    (18) operacao -> ID [ ID ] EQUAL expressoes . ;

    ;               shift and go to state 149


state 129

    (20) operacao_inc -> ID [ ID ] + + . ;

    ;               shift and go to state 150


state 130

    (24) operacao_inc -> ID [ ID ] + EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 151
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 131

    (22) operacao_inc -> ID [ ID ] - - . ;

    ;               shift and go to state 152


state 132

    (26) operacao_inc -> ID [ ID ] - EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 153
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 133

    (27) operacao -> ID [ INT ] [ INT . ] EQUAL expressoes ;
    (28) operacao_inc -> ID [ INT ] [ INT . ] + + ;
    (29) operacao_inc -> ID [ INT ] [ INT . ] - - ;
    (30) operacao_inc -> ID [ INT ] [ INT . ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ INT . ] - EQUAL expressao ;

    ]               shift and go to state 154


state 134

    (17) operacao -> ID [ INT ] EQUAL expressoes . ;

    ;               shift and go to state 155


state 135

    (19) operacao_inc -> ID [ INT ] + + . ;

    ;               shift and go to state 156


state 136

    (23) operacao_inc -> ID [ INT ] + EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 157
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 137

    (21) operacao_inc -> ID [ INT ] - - . ;

    ;               shift and go to state 158


state 138

    (25) operacao_inc -> ID [ INT ] - EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 159
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 139

    (34) operacao -> READ ID [ ID ] ; .

    ID              reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    READ            reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    PRINT           reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    IF              reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    FOR             reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    $end            reduce using rule 34 (operacao -> READ ID [ ID ] ; .)
    }               reduce using rule 34 (operacao -> READ ID [ ID ] ; .)


state 140

    (35) operacao -> READ ID [ INT ] [ . INT ] ;

    INT             shift and go to state 160


state 141

    (33) operacao -> READ ID [ INT ] ; .

    ID              reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    READ            reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    PRINT           reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    IF              reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    FOR             reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    $end            reduce using rule 33 (operacao -> READ ID [ INT ] ; .)
    }               reduce using rule 33 (operacao -> READ ID [ INT ] ; .)


state 142

    (65) operacao -> PRINT ID [ ID ] ; .

    ID              reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    READ            reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    PRINT           reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    IF              reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    FOR             reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    $end            reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)
    }               reduce using rule 65 (operacao -> PRINT ID [ ID ] ; .)


state 143

    (66) operacao -> PRINT ID [ INT ] [ . INT ] ;

    INT             shift and go to state 161


state 144

    (64) operacao -> PRINT ID [ INT ] ; .

    ID              reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    READ            reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    PRINT           reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    IF              reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    FOR             reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    $end            reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)
    }               reduce using rule 64 (operacao -> PRINT ID [ INT ] ; .)


state 145

    (68) operacao -> IF ( expressao_logica ) { operacoes . }
    (69) operacao -> IF ( expressao_logica ) { operacoes . } ELSE { operacoes }
    (9) operacoes -> operacoes . operacao
    (10) operacoes -> operacoes . operacao_inc
    (12) operacao -> . ID EQUAL expressoes ;
    (17) operacao -> . ID [ INT ] EQUAL expressoes ;
    (18) operacao -> . ID [ ID ] EQUAL expressoes ;
    (27) operacao -> . ID [ INT ] [ INT ] EQUAL expressoes ;
    (32) operacao -> . READ ID ;
    (33) operacao -> . READ ID [ INT ] ;
    (34) operacao -> . READ ID [ ID ] ;
    (35) operacao -> . READ ID [ INT ] [ INT ] ;
    (63) operacao -> . PRINT ID ;
    (64) operacao -> . PRINT ID [ INT ] ;
    (65) operacao -> . PRINT ID [ ID ] ;
    (66) operacao -> . PRINT ID [ INT ] [ INT ] ;
    (67) operacao -> . PRINT STRING ;
    (68) operacao -> . IF ( expressao_logica ) { operacoes }
    (69) operacao -> . IF ( expressao_logica ) { operacoes } ELSE { operacoes }
    (70) operacao -> . FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }
    (13) operacao_inc -> . ID + + ;
    (14) operacao_inc -> . ID - - ;
    (15) operacao_inc -> . ID + EQUAL expressao ;
    (16) operacao_inc -> . ID - EQUAL expressao ;
    (19) operacao_inc -> . ID [ INT ] + + ;
    (20) operacao_inc -> . ID [ ID ] + + ;
    (21) operacao_inc -> . ID [ INT ] - - ;
    (22) operacao_inc -> . ID [ ID ] - - ;
    (23) operacao_inc -> . ID [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> . ID [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> . ID [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> . ID [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> . ID [ INT ] [ INT ] + + ;
    (29) operacao_inc -> . ID [ INT ] [ INT ] - - ;
    (30) operacao_inc -> . ID [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> . ID [ INT ] [ INT ] - EQUAL expressao ;

    }               shift and go to state 162
    ID              shift and go to state 9
    READ            shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    FOR             shift and go to state 13

    operacao                       shift and go to state 7
    operacao_inc                   shift and go to state 8

state 146

    (70) operacao -> FOR ( ID EQUAL expressao ; . expressao_logica ; operacao_inc ) { operacoes }
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressao                      shift and go to state 52
    expressao_logica               shift and go to state 163
    fator_logico                   shift and go to state 35
    expressao_relacional           shift and go to state 38
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 147

    (7) atribuicao -> INT_A ID [ INT ] [ INT . ] ;

    ]               shift and go to state 164


state 148

    (50) fator -> ID [ INT ] [ . INT ]

    INT             shift and go to state 165


state 149

    (18) operacao -> ID [ ID ] EQUAL expressoes ; .

    ID              reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    READ            reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    PRINT           reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    IF              reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    FOR             reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    $end            reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)
    }               reduce using rule 18 (operacao -> ID [ ID ] EQUAL expressoes ; .)


state 150

    (20) operacao_inc -> ID [ ID ] + + ; .

    ID              reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    READ            reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    PRINT           reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    IF              reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    FOR             reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    $end            reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    }               reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)
    )               reduce using rule 20 (operacao_inc -> ID [ ID ] + + ; .)


state 151

    (24) operacao_inc -> ID [ ID ] + EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 166
    +               shift and go to state 59
    -               shift and go to state 60


state 152

    (22) operacao_inc -> ID [ ID ] - - ; .

    ID              reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    READ            reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    PRINT           reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    IF              reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    FOR             reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    $end            reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    }               reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)
    )               reduce using rule 22 (operacao_inc -> ID [ ID ] - - ; .)


state 153

    (26) operacao_inc -> ID [ ID ] - EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 167
    +               shift and go to state 59
    -               shift and go to state 60


state 154

    (27) operacao -> ID [ INT ] [ INT ] . EQUAL expressoes ;
    (28) operacao_inc -> ID [ INT ] [ INT ] . + + ;
    (29) operacao_inc -> ID [ INT ] [ INT ] . - - ;
    (30) operacao_inc -> ID [ INT ] [ INT ] . + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ INT ] . - EQUAL expressao ;

    EQUAL           shift and go to state 168
    +               shift and go to state 169
    -               shift and go to state 170


state 155

    (17) operacao -> ID [ INT ] EQUAL expressoes ; .

    ID              reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    READ            reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    PRINT           reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    IF              reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    FOR             reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    $end            reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)
    }               reduce using rule 17 (operacao -> ID [ INT ] EQUAL expressoes ; .)


state 156

    (19) operacao_inc -> ID [ INT ] + + ; .

    ID              reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    READ            reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    PRINT           reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    IF              reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    FOR             reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    $end            reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    }               reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)
    )               reduce using rule 19 (operacao_inc -> ID [ INT ] + + ; .)


state 157

    (23) operacao_inc -> ID [ INT ] + EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 171
    +               shift and go to state 59
    -               shift and go to state 60


state 158

    (21) operacao_inc -> ID [ INT ] - - ; .

    ID              reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    READ            reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    PRINT           reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    IF              reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    FOR             reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    $end            reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    }               reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)
    )               reduce using rule 21 (operacao_inc -> ID [ INT ] - - ; .)


state 159

    (25) operacao_inc -> ID [ INT ] - EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 172
    +               shift and go to state 59
    -               shift and go to state 60


state 160

    (35) operacao -> READ ID [ INT ] [ INT . ] ;

    ]               shift and go to state 173


state 161

    (66) operacao -> PRINT ID [ INT ] [ INT . ] ;

    ]               shift and go to state 174


state 162

    (68) operacao -> IF ( expressao_logica ) { operacoes } .
    (69) operacao -> IF ( expressao_logica ) { operacoes } . ELSE { operacoes }

    ID              reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    READ            reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    PRINT           reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    IF              reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    FOR             reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    $end            reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    }               reduce using rule 68 (operacao -> IF ( expressao_logica ) { operacoes } .)
    ELSE            shift and go to state 175


state 163

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica . ; operacao_inc ) { operacoes }
    (58) expressao_logica -> expressao_logica . AND fator_logico
    (59) expressao_logica -> expressao_logica . OR fator_logico

    ;               shift and go to state 176
    AND             shift and go to state 67
    OR              shift and go to state 68


state 164

    (7) atribuicao -> INT_A ID [ INT ] [ INT ] . ;

    ;               shift and go to state 177


state 165

    (50) fator -> ID [ INT ] [ INT . ]

    ]               shift and go to state 178


state 166

    (24) operacao_inc -> ID [ ID ] + EQUAL expressao ; .

    ID              reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    READ            reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    PRINT           reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    IF              reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    FOR             reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    $end            reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    }               reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)
    )               reduce using rule 24 (operacao_inc -> ID [ ID ] + EQUAL expressao ; .)


state 167

    (26) operacao_inc -> ID [ ID ] - EQUAL expressao ; .

    ID              reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    READ            reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    PRINT           reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    IF              reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    FOR             reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    $end            reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    }               reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)
    )               reduce using rule 26 (operacao_inc -> ID [ ID ] - EQUAL expressao ; .)


state 168

    (27) operacao -> ID [ INT ] [ INT ] EQUAL . expressoes ;
    (36) expressoes -> . expressao
    (37) expressoes -> . expressao_logica
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (57) expressao_logica -> . ! fator_logico
    (58) expressao_logica -> . expressao_logica AND fator_logico
    (59) expressao_logica -> . expressao_logica OR fator_logico
    (60) expressao_logica -> . fator_logico
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (61) fator_logico -> . ( expressao_logica )
    (62) fator_logico -> . expressao_relacional
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]
    (51) expressao_relacional -> . expressao > expressao
    (52) expressao_relacional -> . expressao < expressao
    (53) expressao_relacional -> . expressao LESS_EQUAL expressao
    (54) expressao_relacional -> . expressao MORE_EQUAL expressao
    (55) expressao_relacional -> . expressao EQUAL_EQUAL expressao
    (56) expressao_relacional -> . expressao DIF expressao

    !               shift and go to state 34
    (               shift and go to state 37
    INT             shift and go to state 39
    ID              shift and go to state 29

    expressoes                     shift and go to state 179
    expressao                      shift and go to state 31
    expressao_logica               shift and go to state 32
    termo                          shift and go to state 33
    fator_logico                   shift and go to state 35
    fator                          shift and go to state 36
    expressao_relacional           shift and go to state 38

state 169

    (28) operacao_inc -> ID [ INT ] [ INT ] + . + ;
    (30) operacao_inc -> ID [ INT ] [ INT ] + . EQUAL expressao ;

    +               shift and go to state 180
    EQUAL           shift and go to state 181


state 170

    (29) operacao_inc -> ID [ INT ] [ INT ] - . - ;
    (31) operacao_inc -> ID [ INT ] [ INT ] - . EQUAL expressao ;

    -               shift and go to state 182
    EQUAL           shift and go to state 183


state 171

    (23) operacao_inc -> ID [ INT ] + EQUAL expressao ; .

    ID              reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    READ            reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    PRINT           reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    IF              reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    FOR             reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    $end            reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    }               reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)
    )               reduce using rule 23 (operacao_inc -> ID [ INT ] + EQUAL expressao ; .)


state 172

    (25) operacao_inc -> ID [ INT ] - EQUAL expressao ; .

    ID              reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    READ            reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    PRINT           reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    IF              reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    FOR             reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    $end            reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    }               reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)
    )               reduce using rule 25 (operacao_inc -> ID [ INT ] - EQUAL expressao ; .)


state 173

    (35) operacao -> READ ID [ INT ] [ INT ] . ;

    ;               shift and go to state 184


state 174

    (66) operacao -> PRINT ID [ INT ] [ INT ] . ;

    ;               shift and go to state 185


state 175

    (69) operacao -> IF ( expressao_logica ) { operacoes } ELSE . { operacoes }

    {               shift and go to state 186


state 176

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; . operacao_inc ) { operacoes }
    (13) operacao_inc -> . ID + + ;
    (14) operacao_inc -> . ID - - ;
    (15) operacao_inc -> . ID + EQUAL expressao ;
    (16) operacao_inc -> . ID - EQUAL expressao ;
    (19) operacao_inc -> . ID [ INT ] + + ;
    (20) operacao_inc -> . ID [ ID ] + + ;
    (21) operacao_inc -> . ID [ INT ] - - ;
    (22) operacao_inc -> . ID [ ID ] - - ;
    (23) operacao_inc -> . ID [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> . ID [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> . ID [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> . ID [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> . ID [ INT ] [ INT ] + + ;
    (29) operacao_inc -> . ID [ INT ] [ INT ] - - ;
    (30) operacao_inc -> . ID [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> . ID [ INT ] [ INT ] - EQUAL expressao ;

    ID              shift and go to state 187

    operacao_inc                   shift and go to state 188

state 177

    (7) atribuicao -> INT_A ID [ INT ] [ INT ] ; .

    INT_A           reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    STRING_A        reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    ID              reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    READ            reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    PRINT           reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    IF              reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    FOR             reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)
    $end            reduce using rule 7 (atribuicao -> INT_A ID [ INT ] [ INT ] ; .)


state 178

    (50) fator -> ID [ INT ] [ INT ] .

    *               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    /               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    %               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    +               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    -               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    >               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    <               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    LESS_EQUAL      reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    MORE_EQUAL      reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    EQUAL_EQUAL     reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    DIF             reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    ;               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    )               reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    AND             reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)
    OR              reduce using rule 50 (fator -> ID [ INT ] [ INT ] .)


state 179

    (27) operacao -> ID [ INT ] [ INT ] EQUAL expressoes . ;

    ;               shift and go to state 189


state 180

    (28) operacao_inc -> ID [ INT ] [ INT ] + + . ;

    ;               shift and go to state 190


state 181

    (30) operacao_inc -> ID [ INT ] [ INT ] + EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 191
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 182

    (29) operacao_inc -> ID [ INT ] [ INT ] - - . ;

    ;               shift and go to state 192


state 183

    (31) operacao_inc -> ID [ INT ] [ INT ] - EQUAL . expressao ;
    (38) expressao -> . expressao + termo
    (39) expressao -> . expressao - termo
    (40) expressao -> . termo
    (41) termo -> . termo * fator
    (42) termo -> . termo / fator
    (43) termo -> . termo % fator
    (44) termo -> . fator
    (45) fator -> . INT
    (46) fator -> . ( expressao )
    (47) fator -> . ID
    (48) fator -> . ID [ INT ]
    (49) fator -> . ID [ ID ]
    (50) fator -> . ID [ INT ] [ INT ]

    INT             shift and go to state 39
    (               shift and go to state 79
    ID              shift and go to state 29

    expressao                      shift and go to state 193
    termo                          shift and go to state 33
    fator                          shift and go to state 36

state 184

    (35) operacao -> READ ID [ INT ] [ INT ] ; .

    ID              reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    READ            reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    PRINT           reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    IF              reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    FOR             reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    $end            reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)
    }               reduce using rule 35 (operacao -> READ ID [ INT ] [ INT ] ; .)


state 185

    (66) operacao -> PRINT ID [ INT ] [ INT ] ; .

    ID              reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    READ            reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    PRINT           reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    IF              reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    FOR             reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    $end            reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)
    }               reduce using rule 66 (operacao -> PRINT ID [ INT ] [ INT ] ; .)


state 186

    (69) operacao -> IF ( expressao_logica ) { operacoes } ELSE { . operacoes }
    (9) operacoes -> . operacoes operacao
    (10) operacoes -> . operacoes operacao_inc
    (11) operacoes -> .

    }               reduce using rule 11 (operacoes -> .)
    ID              reduce using rule 11 (operacoes -> .)
    READ            reduce using rule 11 (operacoes -> .)
    PRINT           reduce using rule 11 (operacoes -> .)
    IF              reduce using rule 11 (operacoes -> .)
    FOR             reduce using rule 11 (operacoes -> .)

    operacoes                      shift and go to state 194

state 187

    (13) operacao_inc -> ID . + + ;
    (14) operacao_inc -> ID . - - ;
    (15) operacao_inc -> ID . + EQUAL expressao ;
    (16) operacao_inc -> ID . - EQUAL expressao ;
    (19) operacao_inc -> ID . [ INT ] + + ;
    (20) operacao_inc -> ID . [ ID ] + + ;
    (21) operacao_inc -> ID . [ INT ] - - ;
    (22) operacao_inc -> ID . [ ID ] - - ;
    (23) operacao_inc -> ID . [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> ID . [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> ID . [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> ID . [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> ID . [ INT ] [ INT ] + + ;
    (29) operacao_inc -> ID . [ INT ] [ INT ] - - ;
    (30) operacao_inc -> ID . [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID . [ INT ] [ INT ] - EQUAL expressao ;

    +               shift and go to state 18
    -               shift and go to state 19
    [               shift and go to state 195


state 188

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc . ) { operacoes }

    )               shift and go to state 196


state 189

    (27) operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .

    ID              reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    READ            reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    PRINT           reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    IF              reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    FOR             reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    $end            reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)
    }               reduce using rule 27 (operacao -> ID [ INT ] [ INT ] EQUAL expressoes ; .)


state 190

    (28) operacao_inc -> ID [ INT ] [ INT ] + + ; .

    ID              reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    READ            reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    PRINT           reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    IF              reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    FOR             reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    $end            reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    }               reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)
    )               reduce using rule 28 (operacao_inc -> ID [ INT ] [ INT ] + + ; .)


state 191

    (30) operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 197
    +               shift and go to state 59
    -               shift and go to state 60


state 192

    (29) operacao_inc -> ID [ INT ] [ INT ] - - ; .

    ID              reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    READ            reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    PRINT           reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    IF              reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    FOR             reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    $end            reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    }               reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)
    )               reduce using rule 29 (operacao_inc -> ID [ INT ] [ INT ] - - ; .)


state 193

    (31) operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao . ;
    (38) expressao -> expressao . + termo
    (39) expressao -> expressao . - termo

    ;               shift and go to state 198
    +               shift and go to state 59
    -               shift and go to state 60


state 194

    (69) operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes . }
    (9) operacoes -> operacoes . operacao
    (10) operacoes -> operacoes . operacao_inc
    (12) operacao -> . ID EQUAL expressoes ;
    (17) operacao -> . ID [ INT ] EQUAL expressoes ;
    (18) operacao -> . ID [ ID ] EQUAL expressoes ;
    (27) operacao -> . ID [ INT ] [ INT ] EQUAL expressoes ;
    (32) operacao -> . READ ID ;
    (33) operacao -> . READ ID [ INT ] ;
    (34) operacao -> . READ ID [ ID ] ;
    (35) operacao -> . READ ID [ INT ] [ INT ] ;
    (63) operacao -> . PRINT ID ;
    (64) operacao -> . PRINT ID [ INT ] ;
    (65) operacao -> . PRINT ID [ ID ] ;
    (66) operacao -> . PRINT ID [ INT ] [ INT ] ;
    (67) operacao -> . PRINT STRING ;
    (68) operacao -> . IF ( expressao_logica ) { operacoes }
    (69) operacao -> . IF ( expressao_logica ) { operacoes } ELSE { operacoes }
    (70) operacao -> . FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }
    (13) operacao_inc -> . ID + + ;
    (14) operacao_inc -> . ID - - ;
    (15) operacao_inc -> . ID + EQUAL expressao ;
    (16) operacao_inc -> . ID - EQUAL expressao ;
    (19) operacao_inc -> . ID [ INT ] + + ;
    (20) operacao_inc -> . ID [ ID ] + + ;
    (21) operacao_inc -> . ID [ INT ] - - ;
    (22) operacao_inc -> . ID [ ID ] - - ;
    (23) operacao_inc -> . ID [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> . ID [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> . ID [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> . ID [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> . ID [ INT ] [ INT ] + + ;
    (29) operacao_inc -> . ID [ INT ] [ INT ] - - ;
    (30) operacao_inc -> . ID [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> . ID [ INT ] [ INT ] - EQUAL expressao ;

    }               shift and go to state 199
    ID              shift and go to state 9
    READ            shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    FOR             shift and go to state 13

    operacao                       shift and go to state 7
    operacao_inc                   shift and go to state 8

state 195

    (19) operacao_inc -> ID [ . INT ] + + ;
    (20) operacao_inc -> ID [ . ID ] + + ;
    (21) operacao_inc -> ID [ . INT ] - - ;
    (22) operacao_inc -> ID [ . ID ] - - ;
    (23) operacao_inc -> ID [ . INT ] + EQUAL expressao ;
    (24) operacao_inc -> ID [ . ID ] + EQUAL expressao ;
    (25) operacao_inc -> ID [ . INT ] - EQUAL expressao ;
    (26) operacao_inc -> ID [ . ID ] - EQUAL expressao ;
    (28) operacao_inc -> ID [ . INT ] [ INT ] + + ;
    (29) operacao_inc -> ID [ . INT ] [ INT ] - - ;
    (30) operacao_inc -> ID [ . INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ . INT ] [ INT ] - EQUAL expressao ;

    INT             shift and go to state 201
    ID              shift and go to state 200


state 196

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) . { operacoes }

    {               shift and go to state 202


state 197

    (30) operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .

    ID              reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    READ            reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    PRINT           reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    IF              reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    FOR             reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    $end            reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    }               reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)
    )               reduce using rule 30 (operacao_inc -> ID [ INT ] [ INT ] + EQUAL expressao ; .)


state 198

    (31) operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .

    ID              reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    READ            reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    PRINT           reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    IF              reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    FOR             reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    $end            reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    }               reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)
    )               reduce using rule 31 (operacao_inc -> ID [ INT ] [ INT ] - EQUAL expressao ; .)


state 199

    (69) operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .

    ID              reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    READ            reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    PRINT           reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    IF              reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    FOR             reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    $end            reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)
    }               reduce using rule 69 (operacao -> IF ( expressao_logica ) { operacoes } ELSE { operacoes } .)


state 200

    (20) operacao_inc -> ID [ ID . ] + + ;
    (22) operacao_inc -> ID [ ID . ] - - ;
    (24) operacao_inc -> ID [ ID . ] + EQUAL expressao ;
    (26) operacao_inc -> ID [ ID . ] - EQUAL expressao ;

    ]               shift and go to state 203


state 201

    (19) operacao_inc -> ID [ INT . ] + + ;
    (21) operacao_inc -> ID [ INT . ] - - ;
    (23) operacao_inc -> ID [ INT . ] + EQUAL expressao ;
    (25) operacao_inc -> ID [ INT . ] - EQUAL expressao ;
    (28) operacao_inc -> ID [ INT . ] [ INT ] + + ;
    (29) operacao_inc -> ID [ INT . ] [ INT ] - - ;
    (30) operacao_inc -> ID [ INT . ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT . ] [ INT ] - EQUAL expressao ;

    ]               shift and go to state 204


state 202

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { . operacoes }
    (9) operacoes -> . operacoes operacao
    (10) operacoes -> . operacoes operacao_inc
    (11) operacoes -> .

    }               reduce using rule 11 (operacoes -> .)
    ID              reduce using rule 11 (operacoes -> .)
    READ            reduce using rule 11 (operacoes -> .)
    PRINT           reduce using rule 11 (operacoes -> .)
    IF              reduce using rule 11 (operacoes -> .)
    FOR             reduce using rule 11 (operacoes -> .)

    operacoes                      shift and go to state 205

state 203

    (20) operacao_inc -> ID [ ID ] . + + ;
    (22) operacao_inc -> ID [ ID ] . - - ;
    (24) operacao_inc -> ID [ ID ] . + EQUAL expressao ;
    (26) operacao_inc -> ID [ ID ] . - EQUAL expressao ;

    +               shift and go to state 109
    -               shift and go to state 110


state 204

    (19) operacao_inc -> ID [ INT ] . + + ;
    (21) operacao_inc -> ID [ INT ] . - - ;
    (23) operacao_inc -> ID [ INT ] . + EQUAL expressao ;
    (25) operacao_inc -> ID [ INT ] . - EQUAL expressao ;
    (28) operacao_inc -> ID [ INT ] . [ INT ] + + ;
    (29) operacao_inc -> ID [ INT ] . [ INT ] - - ;
    (30) operacao_inc -> ID [ INT ] . [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] . [ INT ] - EQUAL expressao ;

    +               shift and go to state 113
    -               shift and go to state 114
    [               shift and go to state 206


state 205

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes . }
    (9) operacoes -> operacoes . operacao
    (10) operacoes -> operacoes . operacao_inc
    (12) operacao -> . ID EQUAL expressoes ;
    (17) operacao -> . ID [ INT ] EQUAL expressoes ;
    (18) operacao -> . ID [ ID ] EQUAL expressoes ;
    (27) operacao -> . ID [ INT ] [ INT ] EQUAL expressoes ;
    (32) operacao -> . READ ID ;
    (33) operacao -> . READ ID [ INT ] ;
    (34) operacao -> . READ ID [ ID ] ;
    (35) operacao -> . READ ID [ INT ] [ INT ] ;
    (63) operacao -> . PRINT ID ;
    (64) operacao -> . PRINT ID [ INT ] ;
    (65) operacao -> . PRINT ID [ ID ] ;
    (66) operacao -> . PRINT ID [ INT ] [ INT ] ;
    (67) operacao -> . PRINT STRING ;
    (68) operacao -> . IF ( expressao_logica ) { operacoes }
    (69) operacao -> . IF ( expressao_logica ) { operacoes } ELSE { operacoes }
    (70) operacao -> . FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes }
    (13) operacao_inc -> . ID + + ;
    (14) operacao_inc -> . ID - - ;
    (15) operacao_inc -> . ID + EQUAL expressao ;
    (16) operacao_inc -> . ID - EQUAL expressao ;
    (19) operacao_inc -> . ID [ INT ] + + ;
    (20) operacao_inc -> . ID [ ID ] + + ;
    (21) operacao_inc -> . ID [ INT ] - - ;
    (22) operacao_inc -> . ID [ ID ] - - ;
    (23) operacao_inc -> . ID [ INT ] + EQUAL expressao ;
    (24) operacao_inc -> . ID [ ID ] + EQUAL expressao ;
    (25) operacao_inc -> . ID [ INT ] - EQUAL expressao ;
    (26) operacao_inc -> . ID [ ID ] - EQUAL expressao ;
    (28) operacao_inc -> . ID [ INT ] [ INT ] + + ;
    (29) operacao_inc -> . ID [ INT ] [ INT ] - - ;
    (30) operacao_inc -> . ID [ INT ] [ INT ] + EQUAL expressao ;
    (31) operacao_inc -> . ID [ INT ] [ INT ] - EQUAL expressao ;

    }               shift and go to state 207
    ID              shift and go to state 9
    READ            shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    FOR             shift and go to state 13

    operacao_inc                   shift and go to state 8
    operacao                       shift and go to state 7

state 206

    (28) operacao_inc -> ID [ INT ] [ . INT ] + + ;
    (29) operacao_inc -> ID [ INT ] [ . INT ] - - ;
    (30) operacao_inc -> ID [ INT ] [ . INT ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ . INT ] - EQUAL expressao ;

    INT             shift and go to state 208


state 207

    (70) operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .

    ID              reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    READ            reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    PRINT           reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    IF              reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    FOR             reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    $end            reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)
    }               reduce using rule 70 (operacao -> FOR ( ID EQUAL expressao ; expressao_logica ; operacao_inc ) { operacoes } .)


state 208

    (28) operacao_inc -> ID [ INT ] [ INT . ] + + ;
    (29) operacao_inc -> ID [ INT ] [ INT . ] - - ;
    (30) operacao_inc -> ID [ INT ] [ INT . ] + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ INT . ] - EQUAL expressao ;

    ]               shift and go to state 209


state 209

    (28) operacao_inc -> ID [ INT ] [ INT ] . + + ;
    (29) operacao_inc -> ID [ INT ] [ INT ] . - - ;
    (30) operacao_inc -> ID [ INT ] [ INT ] . + EQUAL expressao ;
    (31) operacao_inc -> ID [ INT ] [ INT ] . - EQUAL expressao ;

    +               shift and go to state 169
    -               shift and go to state 170

